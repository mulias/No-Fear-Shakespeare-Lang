ws > program < ws < end

program =
  Nodes <- array_sep(act, ws) $
  { "type": "program", "nodes": Nodes }

act =
  LabelId <- label_id & ws &
  "{" & ws &
  Nodes <- default(array_sep(act_part, ws), []) & ws &
  "}" $
  { "type": "act", "labelId": LabelId, "nodes": Nodes }

act_part = stage_direction | block

stage_direction = (stage | unstage | unstage_all) < ";"

block =
  SpeakerVarId <- var_id & ws &
  ":" & ws &
  SubjectVarId <- var_id & ws &
  "{" & ws &
  Nodes <- default(array_sep(statement < ws < ";", ws), []) & ws &
  "}" $
  { "type": "block", "speakerVarId": SpeakerVarId, "subjectVarId": SubjectVarId, "nodes": Nodes }

statement = assign | print | read | test | if | goto | push | pop

assign =
  "set" & ws &
  Value <- expression $
  { "type": "assign", "value": Value }

expression = group | arithmetic | const | var

arithmetic =
  Left <- group | const | var & ws &
  Op <- "+" | "-" | "/" | "*" | "%" & ws &
  Right <- arithmetic | group | const | var $
  { "type": "arithmetic", "left": Left, "op": Op, "right": Right }

group = "(" > ws > expression < ws < ")"

const = integer | character

integer = Int <- int $ { "type": "int", "value": Int }

character = Char <- "'" > char < "'" $ { "type": "char", "value": Char }

print = print_char | print_int

print_char = "print_char" $ { "type": "print_char" }

print_int = "print_int" $ { "type": "print_int" }

read = read_char | read_int

read_char = "read_char" $ { "type": "read_char" }

read_int = "read_int" $ { "type": "read_int" }

test =
  Is <- boolean("test", "test_not") & ws &
  Left <- expression & ws &
  Op <- "==" | ">" | "<" & ws &
  Right <- expression & ws $
  { "type": "test", "is": Is, "left": Left, "op": Op, "right": Right }

if =
  Is <- boolean("if_true", "if_false") & ws &
  Then <- statement $
  { "type": "if", "is": Is, "then": Then }

goto = "goto" & ws & LabelId <- label_id $ { "kind": "goto", "labelId": LabelId }

push = "push" & ws & Val <- expression $ { "type": "push", "val": Val }

pop = "pop" $ { "type": "pop" }

stage =
  "stage" & ws &
  VarId1 <- var_id &
  VarId2 <- default(ws > "," > ws > var_id, null) $
  { "type": "stage", "varId1": VarId1, "varId2": VarId2 }

unstage =
  "unstage" & ws &
  VarId1 <- var_id &
  VarId2 <- default(ws > "," > ws > var_id, null) $
  { "type": "unstage", "varId1": VarId1, "varId2": VarId2 }

unstage_all = "unstage_all" $ { "type": "unstage_all" }

label_id = peek(upper) > many(alpha | digit)

var = Id <- var_id $ { "type": "var", "id": Id }

var_id = peek(lower) > many(alpha | digit)

ws = maybe_many(whitespace | comment)

comment = "#" > until(char, nl) < ws
