## To Fizz, Perchance To Buzz
## declare {n}, a counter of loops
## declare {out}, a poet and orator

Start {
  stage n, out;

  out: n {
    set 0;
  }
}

Loop {
  out: n {
    set n + 1;

    test n > 100;

    if_true goto End;

    test (n % 15) == 0;

    if_true goto Fizzbuzz;

    test (n % 3) == 0;

    if_true goto Fizz;

    test (n % 5) == 0;

    if_true goto Buzz;

    print_int;

    goto Loop;
  }
}

FizzBuzz {
  n: out {
    set 'f';
    print_char;
    set 'i';
    print_char;
    set 'z';
    print_char;
    set 'z';
    print_char;
    set 'b';
    print_char;
    set 'u';
    print_char;
    set 'z';
    print_char;
    set 'z';
    print_char;

    goto Loop;
  }
}

Fizz {
  n: out {
    set 'f';
    print_char;
    set 'i';
    print_char;
    set 'z';
    print_char;
    set 'z';
    print_char;

    goto Loop;
  }
}

Buzz {
  n: out {
    set 'b';
    print_char;
    set 'u';
    print_char;
    set 'z';
    print_char;
    set 'z';
    print_char;

    goto Loop;
  }
}

End {
  unstage_all;
}
